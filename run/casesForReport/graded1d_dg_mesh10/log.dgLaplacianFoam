/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     3.2                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  | For copyright notice see file Copyright         |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default none;//Euler;
}

gradSchemes
{
    default         none;//Gauss linear;
}

divSchemes
{
    default         none;
}

laplacianSchemes
{
    default         SIPLaplacian;//Gauss linear corrected;
}

dgLaplacianSchemes
{
    default         SIPLaplacian;//Gauss linear corrected;
    dgLaplacian(T)         SIPLaplacian;
}

interpolationSchemes
{
    default         none;//linear;
}

snGradSchemes
{
    default         none;//corrected;
}

fluxRequired
{}

// ************************************************************************* //
/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     3.2                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  | For copyright notice see file Copyright         |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
{
    T
    {
//         solver           smoothSolver;
//         smoother         GaussSeidel;
//         nSweeps          1;

        solver           BiCGStab;
        preconditioner   DILU;

        minIter          1;
        maxIter          1000;
        tolerance        1e-10;
        relTol           0;
    }

//     T
//     {
//         solver           PCG;
//         preconditioner   DIC;

//         minIter          1;
//         maxIter          1000;
//         tolerance        1e-08;
//         relTol           0;
//     }

//     T
//     {
//         solver          GAMG;
//         tolerance       1e-08;
//         relTol          0;
//         minIter 1;
//         smoother        GaussSeidel;
//         cacheAgglomeration true;
//         nCellsInCoarsestLevel 10;
//         agglomerator    faceAreaPair;
//         mergeLevels     1;
//     }
}

SIMPLE
{}


// ************************************************************************* //
/*---------------------------------------------------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     4.1                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  | For copyright notice see file Copyright         |
\*---------------------------------------------------------------------------*/
Build  : 4.1-dace0ac19d1c
Exec   : dgLaplacianFoam
Date   : Mar 04 2019
Time   : 13:35:05
Host   : "GUbuntu"
PID    : 12043
CtrlDict : "/home/gregor/foam/gregor-4.0/run/discontinuousGalerkin/foam/run/testHarness/graded1d_dg_mesh10/system/controlDict"
Case   : /home/gregor/foam/gregor-4.0/run/discontinuousGalerkin/foam/run/testHarness/graded1d_dg_mesh10
nProcs : 1
sigFpe : Enabling floating point exception trapping (FOAM_SIGFPE).
allowSystemOperations : Disallowing user-supplied system call operations

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
Create time

Create polyMesh for time = 0

Create DG mesh for time = 0

 NEW SELECTOR DGBASE 
 Reading quadrature rule and order: 
 Rule and order read in. Finding in iterator quadrature rule: 
 Returning a constructor: 
Deploying third order quadrature rule.

    From function dgMesh::dgMesh(const polyMesh& pMesh)
    in file dgMesh/dgMesh.C at line 86
    Creating dgMesh from polyMesh
Reading field T


Calculating temperature distribution

-----------Time = 1

CONSTRUCT MATRIX
DGC LAPLACIAN
CONSTRUCT MATRIX
SCALE CELLS : 10(0.172524771 0.1863370591 0.2012551554 0.2173675905 0.2347699835 0.2535656065 0.273866003 0.2957916435 0.3194726455 0.345049542)
GAMMA IS: 1
DG MATRIX SOLVE
BiCGStab:  Solving for T, Initial residual = (0.5373814468 0.5638704785 0.616848542), Final residual = (5.746444426e-31 6.895733311e-31 6.321088868e-31), No Iterations 1
SOLVER OUT
 SOLVED

- - - - - - - - - - - -

Tvol: 10(4.908693351 4.59430897 4.253220409 3.886676429 3.492887706 3.069967109 2.615911777 2.128595236 1.605874502 1.037076461)

Test harness successfully finished.
